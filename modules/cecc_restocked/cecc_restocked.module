<?php

use Drupal\cecc\Service\FormHelper;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

function cecc_restocked_form_alter(
  &$form,
  FormStateInterface $formState, $form_id
) {
  if (FormHelper::getFormId($formState, $form_id) == 'commerce_order_item_add_to_cart_form') {
    // Get the product variation.
    $selected_variation = FormHelper::getSelectedVariation($formState);
    /** @var \Drupal\cecc_stock\Service\StockValidation $stockValidation */
    $stockValidation = \Drupal::service('cecc_stock.stock_validation');
    /** @var \Drupal\flag\FlagLinkBuilderInterface $flagLinkBuilder */
    $flagLinkBuilder = \Drupal::service('flag.link_builder');
    /** @var \Drupal\flag\FlagServiceInterface $flagService */
    $flagService = \Drupal::service('flag');
    $flag = $flagService->getFlagById('cecc_request_restock');
    $currentUser = \Drupal::currentUser();

    // Check if in stock.
    $inStock = $stockValidation->checkProductStock($selected_variation);

    if (!$inStock) {
      $product = FormHelper::getSelectedProduct($formState);
      $isAnonymous = $currentUser->isAnonymous();

      if (!$isAnonymous) {
        $flagging = $flagService->getFlagging($flag, $product);

        if (!$flagging) {
          $form['actions']['restocked'] =
            $flagLinkBuilder->build('commerce_product', $product->id(), 'cecc_request_restock');
        }
        else {
          $form['actions']['flagged_restocked'] = [
            '#type' => 'item',
            '#markup' => '<div class="usa-alert usa-alert--warning usa-alert--no-icon"> ' .
              '<div class="usa-alert__body"><p class="usa-alert__text">' .
              t('Thank you. You will be notified when this publication is back in stock.') .
              '</p></div></div>',
          ];
        }
      }
      else {
        $form['actions']['restocked'] = [
          '#weight' => 1,
          '#type' => 'link',
          '#title' => t('Request Restock to Get Notified'),
          '#attributes' => [
            'class' => [
              'usa-button',
              'usa-button--secondary',
              'width-full',
              'margin-x-0'
            ],
          ],
          '#url' => Url::fromRoute('user.login', [], [
            'query' => [
              'destination' => Url::fromRoute('<current>')->toString(),
            ],
          ]),
          '#suffix' => '<div class="margin-top-1">' .
            t('You will be required to create an account to receive this notification')
            . '</div>',
        ];
      }
      $form['actions']['submit']['#weight'] = 0;
    }
  }
}

function cecc_restocked_mail($key, &$message, $params) {
  $siteMail = \Drupal::config('system.site')->get('mail');
  $siteName = \Drupal::config('system.site')->get('name');
  $options = [
    'langcode' => $message['langcode'],
  ];

  switch ($key) {
    case 'restock_notification':
      $message['headers']['Content-Type'] = 'text/html';
      $message['from'] = $siteMail;
      $message['subject'] = t('@site_name Restock Notification for @product_title', [
        '@product_title' => $params['product_title'],
        '@site_name' => $siteName,
      ], $options);
      $message['body'][] = $params['message'];
      break;
  }
}

function cecc_restocked_theme($existing, $type, $theme, $path) {
  $themeArray = [];

  $themeArray['cecc_restocked_notification'] = [
    'variables' => [
      'order_entity' => NULL,
      'billing_information' => NULL,
      'shipping_information' => NULL,
      'payment_method' => NULL,
      'totals' => NULL,
    ],
  ];
}
