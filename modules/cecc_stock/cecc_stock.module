<?php

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Form\FormStateInterface;

function cecc_stock_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $stockHelper = \Drupal::service('cecc_stock.stock_helper');
  $stockHelper->alterCatalogForms($form, $form_state, $form_id);
}

/**
 * Implements hook_entity_base_field_info_alter().
 */
function cecc_stock_entity_base_field_info_alter(&$fields, EntityTypeInterface $entity_type) {
  if ($entity_type->id() === 'commerce_order_item') {
    $config = \Drupal::configFactory()->get('cecc_stock.settings');
    if (!empty($fields['quantity'])) {
      if ($config->get('hard_limit_order_quantity')) {
        $fields['quantity']->addConstraint('QuantityLimit');
      }

      $fields['quantity']->addConstraint('StockLevel');
    }
  }
}

function cecc_stock_preprocess_commerce_product__publication(&$variables) {
  $config = \Drupal::config('cecc_stock.settings');

  if (!empty($config->get('hard_limit_order_quantity')) &&
    $config->get('hard_limit_order_quantity')
  ) {
    /** @var \Drupal\commerce_product\Entity\ProductInterface $product */
    $product = $variables['product_entity'];
    /** @var \Drupal\cecc_stock\Service\StockValidation $stockValidation */
    $stockValidation = Drupal::service('cecc_stock.stock_validation');
    /** @var \Drupal\commerce_product\Entity\ProductVariationInterface $productVariation */
    $productVariation = $product->getDefaultVariation();

    $productVariationId = $productVariation->id();
    $limitText = t($config->get('order_over_limit_text'), [
      '%label' => $product->getTitle(),
      '%limit' => $productVariation->get('field_cecc_order_limit')->value,
    ]);

    $variables['atQuantityLimit'] = $stockValidation->isCartAtQuantityLimit($productVariationId);
    $variables['limitText'] = $limitText;
  }
}

