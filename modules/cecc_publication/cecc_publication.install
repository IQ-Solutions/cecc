<?php

use Drupal\Core\Config\FileStorage;
use Drupal\field\Entity\FieldConfig;
use Drupal\field\Entity\FieldStorageConfig;

/**
 * Adds fields add through the UI as config if the module is already installed.
 *
 * @param array $entity_fields
 *   A 4 dimensional array. The first level is the entity types, the second is
 *   bundles, the third is the field you want to add, the fourth are any
 *   settings for that field. E.g.
 *   [
 *     'commerce_product_variation' => [
 *       'cecc_publication' => [
 *         'field_cecc_different_physical_ve' => [
 *           'type' => 'boolean_checkbox',
 *           'settings' => [
 *             'display_label' => 'true',
 *           ],
 *         ],
 *       ],
 *     ],
 *   ]
 */
function _processAddFields(array $entity_fields) {
  $modulePath = \Drupal::moduleHandler()->getModule('cecc_publication')->getPath();
  $configDirectory = new FileStorage($modulePath . '/config/install');

  foreach ($entity_fields as $entityType => $bundles) {
    foreach ($bundles as $bundle => $fields) {
      foreach ($fields as $field => $settings) {
        $fieldStorageName = 'field.storage.' . $entityType . '.' . $field;
        $configRecord = $configDirectory->read($fieldStorageName);
        $fieldStorage = FieldStorageConfig::loadByName(
          $configRecord['entity_type'],
          $configRecord['field_name']);

        if (!$fieldStorage) {
          $fieldStorage = FieldStorageConfig::create($configRecord);
          $fieldStorage->save();
        }

        $fieldConfigName = 'field.field.' . $entityType . '.' . $bundle . '.' . $field;
        $configRecord = $configDirectory->read($fieldConfigName);
        $fieldConfig = FieldConfig::loadByName(
          $configRecord['entity_type'],
          $configRecord['bundle'],
          $configRecord['field_name']);

        if (!$fieldConfig) {
          $fieldConfig = FieldConfig::create($configRecord)->save();
          $fieldStorage->save();
        }

        /** @var \Drupal\Core\Entity\EntityDisplayRepository $entityDisplay */
        $entityDisplay = \Drupal::service('entity_display.repository');
        $formDisplay = $entityDisplay->getFormDisplay($entityType, $bundle);
        $viewDisplay = $entityDisplay->getViewDisplay($entityType, $bundle);

        if (!$formDisplay->getComponent($fieldConfig->getName())) {
          $formDisplay->setComponent($fieldConfig->getName(), $settings);
          $formDisplay->save();
        }

        if (!$viewDisplay->getComponent($fieldConfig->getName())) {
          $viewDisplay->setComponent($fieldConfig->getName(), $settings);
          $viewDisplay->save();
        }

      }
    }
  }

}
